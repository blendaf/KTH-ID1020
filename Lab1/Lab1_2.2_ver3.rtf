{\rtf1\ansi\ansicpg1252\cocoartf1504
{\fonttbl\f0\fnil\fcharset0 Menlo-Bold;\f1\fnil\fcharset0 Menlo-Regular;\f2\fnil\fcharset0 Menlo-Italic;
\f3\fnil\fcharset0 Menlo-BoldItalic;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue109;\red82\green0\blue103;\red0\green0\blue254;
\red109\green109\blue109;\red15\green112\blue3;}
{\*\expandedcolortbl;\csgray\c100000;\csgenericrgb\c0\c0\c42745;\csgenericrgb\c32157\c0\c40392;\csgenericrgb\c0\c0\c99608;
\csgenericrgb\c42745\c42745\c42745;\csgenericrgb\c5882\c43922\c1176;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\b\fs24 \cf2 public class 
\f1\b0 \cf0 RecursivePascal \{\
\
    
\f0\b \cf2 boolean \cf3 b 
\f1\b0 \cf0 = 
\f0\b \cf2 false
\f1\b0 \cf0 ;\
    
\f0\b \cf2 int 
\f1\b0 \cf0 [][] 
\f0\b \cf3 array
\f1\b0 \cf0 ;\
\
    
\f0\b \cf2 public void 
\f1\b0 \cf0 printPascal (
\f0\b \cf2 int 
\f1\b0 \cf0 n) \{\
\
        
\f0\b \cf2 if 
\f1\b0 \cf0 (n != \cf4 0\cf0 ) \{\
\
            
\f0\b \cf2 if 
\f1\b0 \cf0 (
\f0\b \cf3 b
\f1\b0 \cf0 )\
            \{ printPascal(n-\cf4 1\cf0 );\}\
            
\f2\i \cf5 //by keep calling the printPascal function the algorithm will go through all of the numbers\
            //and then when n = 0 it will jump out one step and write out the numbers in the order of the stack\
            //which is by now in descending order.\
\
\
            
\f0\i0\b \cf2 for 
\f1\b0 \cf0 (
\f0\b \cf2 int 
\f1\b0 \cf0 i = \cf4 0\cf0 ; i < n; i++)\
            \{\
\
                System.
\f3\i\b \cf3 out
\f1\i0\b0 \cf0 .print(binom(n-\cf4 1\cf0 ,i ));\
                
\f2\i \cf5 //call the binom function, n-1 becuse we start at row 0 and column 0 instead on 1\
                
\f1\i0 \cf0 System.
\f3\i\b \cf3 out
\f1\i0\b0 \cf0 .print(
\f0\b \cf6 " "
\f1\b0 \cf0 );\
                
\f2\i \cf5 //space between numbers\
            
\f1\i0 \cf0 \}\
            System.
\f3\i\b \cf3 out
\f1\i0\b0 \cf0 .println(
\f0\b \cf6 ""
\f1\b0 \cf0 );\
            
\f0\b \cf2 if 
\f1\b0 \cf0 (!
\f0\b \cf3 b
\f1\b0 \cf0 )\{printPascal(n - \cf4 1\cf0 );\}\
        \}\
    \}\
\
\
    
\f0\b \cf2 public int 
\f1\b0 \cf0 binom (
\f0\b \cf2 int 
\f1\b0 \cf0 n, 
\f0\b \cf2 int 
\f1\b0 \cf0 k) \{\
\
        
\f0\b \cf2 int 
\f1\b0 \cf0 v;\
        
\f0\b \cf2 if 
\f1\b0 \cf0 (
\f0\b \cf3 array
\f1\b0 \cf0 [n][k] != \cf4 0\cf0 )\{\
            v = 
\f0\b \cf3 array
\f1\b0 \cf0 [n][k];\
        \}\
\
        
\f0\b \cf2 else 
\f1\b0 \cf0 \{\
            
\f0\b \cf2 if 
\f1\b0 \cf0 (n == \cf4 0\cf0 ) \{\
                v = \cf4 1\cf0 ;\
            \}\
            
\f2\i \cf5 // first row\
            
\f0\i0\b \cf2 else if 
\f1\b0 \cf0 (n == \cf4 1\cf0 ) \{\
                v = \cf4 1\cf0 ;\
            \}\
            
\f2\i \cf5 // second row\
            
\f0\i0\b \cf2 else if 
\f1\b0 \cf0 (k == \cf4 0\cf0 ) \{\
                v = \cf4 1\cf0 ;\
            \}\
            
\f2\i \cf5 // first column always one\
            
\f0\i0\b \cf2 else if 
\f1\b0 \cf0 (k == n) \{\
                v = \cf4 1\cf0 ;\
            \}\
            
\f2\i \cf5 // last column always one\
            
\f0\i0\b \cf2 else 
\f1\b0 \cf0 \{\
                v = binom(n - \cf4 1\cf0 , k - \cf4 1\cf0 ) + binom(n - \cf4 1\cf0 , k);\
            \}\
            
\f2\i \cf5 // recursive function\
        
\f1\i0 \cf0 \}\
        
\f0\b \cf3 array
\f1\b0 \cf0 [n][k] = v;\
        
\f0\b \cf2 return 
\f1\b0 \cf0 v;\
    \}\
\}\
\
\
}